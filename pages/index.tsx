import type { NextPage, GetStaticProps, InferGetStaticPropsType } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import { useState } from 'react';

import { request, query } from 'lib/datocms';
// Hooks
import { Store } from '@Hooks/useStore';
import { Modal } from '@Hooks/useModal';
// Components
import { extraCSS } from '@Helpers/critical';
import Navigation from '@Components/navigation';
import Main from '@Components/main';

const Services = dynamic(() => import('@Components/services'));
const Projects = dynamic(() => import('@Components/projects'));
const About = dynamic(() => import('@Components/about'));

const Home: NextPage = ({
  data,
  language,
  languages,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const [modal, openModal] = useState({ active: false });

  if (!data) {
    return <main>Sorry! This page not found.</main>;
  }

  return (
    <Store.Provider value={{ language, languages, data }}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <style dangerouslySetInnerHTML={{ __html: extraCSS }} />
      </Head>
      <Modal.Provider value={{ modal, openModal }}>
        <Navigation />
        <main>
          <Main />
          <Services />
          <Projects />
          <About />
        </main>
      </Modal.Provider>
    </Store.Provider>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async context => {
  const data = await request({ query, variables: { locale: context.locale } });

  return {
    props: {
      data,
      language: context.locale,
      languages: context.locales,
    },
  };
};
